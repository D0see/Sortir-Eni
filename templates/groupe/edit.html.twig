{% extends 'base.html.twig' %}

{% block title %}Mise à jour du groupe{% endblock %}

{% block stylesheets %}
    {{ parent() }}
{% endblock %}

{% block body %}
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow-lg">
                    <div class="card-header text-white text-center">
                        <h2 class="mb-1">Mise à jour du groupe</h2>
                    </div>
                    <div class="card-body">
                        <a href="{{ path('mes_groupes') }}" class="btn btn-outline-secondary mb-3">
                            <i class="fas fa-arrow-left"></i> Retour à la liste
                        </a>

                        <h5 class="mb-3"><strong>Sélectionner un membre à ajouter</strong></h5>

                        <div id="addMember" class="mb-3"></div>
                        <div id="members"></div>

                        <hr>

                        {{ form_start(form) }}

                        {# Rendre le champ 'nom' manuellement #}
                        {{ form_row(form.nom) }}

                        <br>
                        {{ form_row(form.participants, {'label': false}) }}
                        <button class="btn btn-outline-success">mise a jour</button>

                        {{ form_end(form) }}
                        <br>
                        <form method="post" action="{{ path('app_groupe_delete', {'id': groupe.id}) }}"
                              onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer ce groupe ?');">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ groupe.id) }}">
                            <button type="submit" class="btn btn-outline-danger "><i class="fas fa-trash-alt"></i> Supprimer</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="userPseudo" style="display: none">{{ userPseudo }}</div>
    <div id="ogMembers" style="display: none">
        {% for participant in groupe.participants %}
            <p id="{{ participant.pseudo }}">{{ participant.pseudo }}</p>
        {% endfor %}
    </div>

    <script>
        (() => {
            const userPseudo = document.getElementById('userPseudo').innerText;
            document.getElementById('groupe_participants').hidden = true;

            const allParticipants = [...document.getElementById('groupe_participants').childNodes];
            allParticipants.forEach(participant => participant.selected = false);

            const allParticipantsObj = allParticipants.reduce((acc, currElem) => {
                acc[currElem.innerText] = currElem;
                return acc;
            }, {});

            const originalGroupMembers = [...document.getElementById('ogMembers').childNodes];
            originalGroupMembers.forEach(memberElem => {
                if (allParticipantsObj[memberElem.innerText]) allParticipantsObj[memberElem.innerText].selected = true;
            });

            const originalGroupMembersObj = originalGroupMembers.reduce((acc, currElem) => {
                acc[currElem.innerText] = currElem;
                return acc;
            }, {});

            const selector = document.createElement('select');
            selector.id = "visibleSelector";
            selector.classList.add('form-select', 'mb-3');
            document.getElementById('addMember').appendChild(selector);

            allParticipants.forEach(participant => {
                if (originalGroupMembersObj[participant.innerText]) return;
                const clonedElem = participant.cloneNode(true);
                clonedElem.id = participant.innerText + "-cloned";
                selector.appendChild(clonedElem);
            });

            const listElem = document.getElementById("members");

            const refreshDisplayList = (listElem, allParticipants, selector) => {
                for (const participant of allParticipants) {
                    if (!participant.selected || participant?.displayed) continue;

                    participant.displayed = true;

                    const participantDisplay = document.createElement('div');
                    participantDisplay.classList.add('d-flex', 'justify-content-between', 'align-items-center', 'border', 'p-2', 'mb-2');

                    const participantName = document.createElement('span');
                    participantName.innerText = participant.innerText;
                    participantDisplay.appendChild(participantName);
                    listElem.appendChild(participantDisplay);

                    if (participantName.innerText === userPseudo) {
                        participantName.innerText += " (créateur du groupe)";
                        continue;
                    }

                    const deleteParticipantBtn = document.createElement('button');
                    deleteParticipantBtn.classList.add('btn', 'btn-outline-danger', 'btn-sm');
                    deleteParticipantBtn.innerHTML = '<i class="fas fa-user-times"></i> Supprimer';

                    deleteParticipantBtn.addEventListener('click', () => {
                        const clonedElem = participant.cloneNode(true);
                        clonedElem.id = participant.innerText + "-cloned";
                        selector.appendChild(clonedElem);
                        participantDisplay.remove();
                        participant.displayed = false;
                        participant.selected = false;
                    });

                    participantDisplay.appendChild(deleteParticipantBtn);
                }
            };
            refreshDisplayList(listElem, allParticipants, selector);

            const addParticipantButton = document.createElement('button');
            addParticipantButton.classList.add('btn', 'btn-primary', 'w-100');
            addParticipantButton.innerHTML = '<i class="fas fa-user-plus"></i> Ajouter';

            document.getElementById('addMember').appendChild(addParticipantButton);

            addParticipantButton.addEventListener('click', () => {
                for (const participant of allParticipants) {
                    if (participant.value === selector.value) {
                        participant.selected = true;
                        refreshDisplayList(listElem, allParticipants, selector);
                        selector.removeChild(document.getElementById(participant.innerText + "-cloned"));
                        break;
                    }
                }
            });
        })();
    </script>

{% endblock %}
